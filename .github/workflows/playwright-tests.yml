name: ðŸŽ­ Playwright Tests

on:
  push:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        project:
          [
            chromium,
            firefox,
            webkit,
            "Mobile Chrome",
            "Mobile Chrome Small",
            "Mobile Chrome Large",
            "Tablet Chrome",
            "Mobile Safari",
            "Mobile Safari Small",
            "Mobile Safari Large",
            "Tablet Safari",
          ]
        exclude:
          # macOS doesnt have to run chromium/firefox
          - os: macos-latest
            project: chromium
          - os: macos-latest
            project: firefox
          - os: macos-latest
            project: "Mobile Chrome"
          - os: macos-latest
            project: "Mobile Chrome Small"
          - os: macos-latest
            project: "Mobile Chrome Large"
          - os: macos-latest
            project: "Tablet Chrome"

          # macOS runs the webkit / safari tests
          - os: ubuntu-latest
            project: webkit
          - os: ubuntu-latest
            project: "Mobile Safari"
          - os: ubuntu-latest
            project: "Mobile Safari Small"
          - os: ubuntu-latest
            project: "Mobile Safari Large"
          - os: ubuntu-latest
            project: "Tablet Safari"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.5

      - name: Install Playwright Browsers
        run: deno task test:install

      - name: Install dependencies
        run: deno cache --lock=deno.lock main.ts

      - name: Run Playwright tests
        run: deno task test --project="${{ matrix.project }}"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.os }}-${{ matrix.project }}
          path: playwright-report/
          retention-days: 30

  test-report:
    if: always()
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          path: playwright-reports/
          merge-multiple: true

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.5

      - name: Install Playwright HTML Reporter
        run: deno task test:install

      - name: Debug - List downloaded reports
        run: |
          echo "Contents of playwright-reports directory:"
          find playwright-reports/ -type f -name "*.json" -o -name "*.html" | head -20
          echo "Directory structure:"
          ls -la playwright-reports/

      - name: Generate merged report
        run: |
          # Create a temporary directory for merged reports
          mkdir -p merged-reports

          # Find all report directories and copy their contents
          find playwright-reports/ -name "playwright-report" -type d | while read dir; do
            echo "Found report directory: $dir"
            # Copy all files from each report directory
            cp -r "$dir"/* merged-reports/ 2>/dev/null || true
          done

          # List what we have in merged-reports
          echo "Contents of merged-reports:"
          ls -la merged-reports/

          # Try to merge reports from the merged directory
          if [ -d "merged-reports" ] && [ "$(ls -A merged-reports)" ]; then
            deno run -A npm:@playwright/test@^1.40.0 merge-reports --reporter=html merged-reports/
          else
            echo "No reports found to merge"
            exit 1
          fi

      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-merged-report
          path: playwright-report/
          retention-days: 30
