{
  "lock": false,
  "tasks": {
    "check": "deno fmt --check && deno lint && deno check **/*.ts && deno check **/*.tsx",
    "cli": "echo \"import '\\$fresh/src/dev/cli.ts'\" | deno run --unstable -A -",
    "manifest": "deno task cli manifest $(pwd)",
    "start": "deno run --unstable-otel -A --watch=static/,routes/ dev.ts",
    "build": "deno run -A dev.ts build",
    "preview": "deno run -A main.ts",
    "update": "deno run -A -r https://fresh.deno.dev/update .",
    "refresh-all": "cd scripts && deno run -A refresh-all.ts",
    "sources": "cd scripts && deno run -A get-new-sources.ts",
    "generate-devices": "cd scripts && deno run -A generate-devices.ts",
    "patch-devices": "cd scripts && deno run -A patch-devices.ts",
    "scrape": "cd scripts && deno run -A scrape-images.ts",
    "sitemap": "cd scripts && deno run -A generate-sitemap.ts"
  },
  "lint": {
    "rules": {
      "tags": [
        "fresh",
        "recommended"
      ],
      "exclude": [
        "require-await",
        "jsx-boolean-value"
      ],
      "include": [
        "no-console",
        "no-unused-vars",
        "no-debugger"
      ]
    }
  },
  "exclude": [
    "**/_fresh/*",
    "data/source/results/*",
    "data/source/files/*",
    "data/source/data-source.ipynb",
    "static/pico.pumpkin.min.css",
    "static/styles.css",
    "**/node_modules/*"
  ],
  "imports": {
    "$fresh/": "https://deno.land/x/fresh@1.7.3/",
    "$fresh_charts/": "https://deno.land/x/fresh_charts@0.3.1/",
    "@opentelemetry/api": "npm:@opentelemetry/api@^1.9.0",
    "@preact-icons/pi": "jsr:@preact-icons/pi@^1.0.12",
    "@std/http": "jsr:@std/http@^1.0.13",
    "@std/log": "jsr:@std/log@^0.224.14",
    "preact": "npm:preact@10.22.1",
    "preact/jsx-runtime": "npm:preact@10.22.1/jsx-runtime",
    "preact/hooks": "npm:preact@10.22.1/hooks",
    "@preact/signals": "https://esm.sh/*@preact/signals@2.0.1",
    "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.8.0",
    "$std/": "https://deno.land/std@0.216.0/",
    "@cap.js/server": "npm:@cap.js/server",
    "@cap.js/widget": "npm:@cap.js/widget",
    "pocketbase": "npm:pocketbase"
  },
  "compilerOptions": {
    "jsx": "react-jsx",
    "jsxImportSource": "preact"
  }
}
